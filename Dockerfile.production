# Production Dockerfile for Railway deployment
# Multi-stage build: React build + FastAPI serve with nginx

# Stage 1: Build React frontend
FROM node:20-alpine AS frontend-builder

WORKDIR /app/frontend
COPY frontend/package*.json ./

RUN rm -rf node_modules package-lock.json
RUN npm install @tailwindcss/postcss
RUN npm install

COPY frontend/ .
RUN npm run build

# Stage 2: Nginx to serve React + proxy to FastAPI
FROM nginx:alpine AS frontend-server

# Copy built React app
COPY --from=frontend-builder /app/frontend/dist /usr/share/nginx/html

# Custom nginx config
COPY nginx.conf /etc/nginx/nginx.conf

EXPOSE 80

# Stage 3: FastAPI backend
FROM python:3.11-slim AS backend

WORKDIR /app

COPY backend/requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

COPY backend/ .

RUN mkdir -p /app/data

EXPOSE 8000

CMD ["uvicorn", "main:app", "--host", "0.0.0.0", "--port", "8000"]